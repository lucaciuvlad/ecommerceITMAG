.navbar {
    width: 100%;
    display: grid;
    grid-template-columns: 0.1fr 0.25fr 0.2fr 0.5fr;
    grid-template-rows: 45px;
    grid-template-areas: "left logo . right";
    position: relative;
    background-color: #fff;
    z-index: 9;

    &::after {
        content: "";
        position: absolute;
        top: 100%;
        left: 0;
        width: 100%;
        height: 3px;
        background-image: linear-gradient(90deg, getMap($colors, primaryColor), getMap($colors, secondaryColor));

        @include mq(tablet) {
            background: none;
        }
    }

    &.sticky {
        position: sticky;
        top: 0;
        width: 100%;
        animation: trans-in 0.5s ease-in 1;

        @keyframes trans-in {
            0% {
                transform: translateY(-50px);
            }

            50% {
                transform: translateY(-25px);
            }

            100% {
                transform: translateY(0);
            }
        }
    }

    @include mq(tablet) {
        grid-template-columns: 0.13fr 0.6fr 0.2fr;
        grid-template-areas: "logo search right";
        grid-template-rows: 80px;
        justify-content: space-between;
        padding: 0 2%;

        &.sticky {
            grid-template-columns: 0.06fr 0.14fr 0.6fr 0.2fr;
            grid-template-areas: "left logo search right";
            grid-template-rows: 45px;

            &::after {
                background: linear-gradient(90deg, getMap($colors, primaryColor), getMap($colors, secondaryColor));
            }
        }
    }

    @include mq(desktop) {
        grid-template-columns: 0.1fr 0.5fr 0.35fr;
        grid-template-rows: 85px;
        grid-template-areas: "logo search right";
        justify-content: space-between;
        padding: 0 6%;

        &.sticky {
            grid-template-columns: 0.03fr 0.11fr 0.49fr 0.02fr 0.35fr;
            grid-template-areas: "left logo search . right";
            grid-template-rows: 45px;
        }
    }

    &__left-area {
        grid-area: left;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;

        &::after {
            content: "";
            position: absolute;
            top: 100%;
            left: 0;
            width: 100%;
            height: 3px;
            background-color: transparent;
            z-index: 7;
        }

        & > i {
            font-size: 1.3em;
            color: getMap($colors, primaryColor);
            transform: rotate(0);
            transition: getMap($transitions, transform);
            cursor: pointer;

            &.fa-times {
                transform: rotate(90deg);
            }
        }

        @include mq(tablet) {
            display: none;
        }

        &.sticky {
            display: flex;
        }

        &__categories {
            position: absolute;
            top: calc(100% + 3px);
            left: 0;
            width: 235px;
            height: calc(100vh - 45px);
            display: flex;
            flex-direction: column;
            background-color: #fff;
            z-index: 9;
            transform: translateX(-100%);
            transition: getMap($transitions, transform);

            &.active {
                transform: translateX(0);
            }

            @include mq(tablet) {
                width: 250px;
                left: -35%;
            }

            @include mq(desktop) {
                width: 15vw;
                height: 25vh;
                left: 0;
                transform: translateX(0);
                border-bottom-left-radius: $regularRadius;
                border-bottom-right-radius: $regularRadius;
                box-shadow: 0 0 5px getMap($colors, textColor);
                visibility: hidden;
                opacity: 0;
                transition: getMap($transitions, visibility), getMap($transitions, opacity);

                &::after {
                    background-image: none;
                }

                &.active {
                    visibility: visible;
                    opacity: 1;
                }
            }

            & > li {
                width: 100%;
                height: 6.5vh;
                display: flex;
                align-items: center;

                @include mq(mobile) {
                    height: 5vh;
                }

                & > a {
                    width: 100%;
                    height: 100%;
                    display: flex;
                    align-items: center;
                    padding: 0 3%;
                    text-decoration: none;
                    transition: box-shadow 0.15s ease-in;

                    &:hover {
                        box-shadow: inset 0 0 5px getMap($colors, lightenNeutralColor);
                    }

                    &:hover > span {
                        color: getMap($colors, primaryColor);
                    }

                    & > i {
                        width: 10%;
                        height: 100%;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        color: getMap($colors, textColor);
                    }

                    & > span {
                        width: 90%;
                        height: 100%;
                        display: flex;
                        align-items: center;
                        color: getMap($colors, textColor);
                        margin-left: 4%;
                        font-size: $regularTextSize;
                        font-weight: 600;
                        transition: getMap($transitions, color);
                    }
                }
            }
        }
    }

    &__logo {
        grid-area: logo;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: flex-start;

        & > a {
            width: 70%;
            height: 60%;
            display: flex;
            align-items: center;
            justify-content: flex-start;

            @include mq(tablet) {
                height: 60%;
            }

            @include mq(desktop) {
                height: 50%;
                display: flex;
                justify-content: flex-end;

                &.sticky {
                    height: 75%;
                }
            }

            & > img {
                width: 100%;
                height: 100%;
                object-fit: contain;
            }
        }
    }

    &__search {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 9;
        opacity: 0;
        visibility: hidden;
        background-color: #fff;
        transition: getMap($transitions, visibility), getMap($transitions, opacity), getMap($transitions, bgColor);

        &.active {
            opacity: 1;
            visibility: visible;
            background-color: #fff;
        }

        @include mq(tablet) {
            grid-area: search;
            width: 100%;
            display: flex;
            align-items: center;
            opacity: 1;
            visibility: visible;
        }

        @include mq(desktop) {
            width: 100%;
        }

        &__container {
            width: 90%;
            margin: 0 auto;
            height: 100%;
            display: flex;
            background-color: #fff;

            @include mq(tablet) {
                width: 100%;
                height: 45%;
                border: 1px solid getMap($colors, primaryColor);
                border-radius: 15px;
                transition: border-bottom-left-radius 0.15s ease-in, border-bottom-right-radius 0.15s ease-in;

                &.active {
                    border-bottom: none;
                    border-bottom-left-radius: 0;
                    border-bottom-right-radius: 0;
                }

                &.sticky {
                    height: 75%;
                }
            }

            @include mq(desktop) {
                height: 40%;
            }

            & input {
                width: 85%;
                height: 100%;
                padding: 0 3%;
                border: none;
                outline: none;
                font-family: getMap($fonts, textFont);
                color: getMap($colors, textColor);

                @include mq(tablet) {
                    width: 90%;
                    border-top-left-radius: 15px;
                    border-bottom-left-radius: 15px;
                }

                @include mq(desktop) {
                    width: 93%;
                    font-size: 0.9em;
                }
            }

            & > i {
                width: 15%;
                height: 100%;
                display: flex;
                align-items: center;
                justify-content: flex-end;
                font-size: 1.3em;
                color: getMap($colors, primaryColor);
                cursor: pointer;

                @include mq(tablet) {
                    width: 10%;
                    justify-content: center;
                }

                @include mq(desktop) {
                    width: 7%;
                }

                &.fa-times {
                    color: getMap($colors, closeColor);

                    @include mq(tablet) {
                        opacity: 0;
                        visibility: hidden;
                        transform: rotate(0);
                        transition: getMap($transitions, visibility), getMap($transitions, opacity),
                            getMap($transitions, transform);

                        &.active {
                            opacity: 1;
                            visibility: visible;
                            transform: rotate(90deg);
                        }
                    }
                }

                &.fa-search {
                    transition: getMap($transitions, color);

                    &:hover {
                        color: getMap($colors, darkenPrimaryColor);
                    }
                }
            }
        }

        &__suggestions {
            position: absolute;
            top: calc(100% + 3px);
            left: 0;
            width: 100%;
            height: calc(100vh - 45px);
            display: flex;
            flex-direction: column;
            background-color: #fff;

            @include mq(tablet) {
                top: calc(100% - 23px);
                opacity: 0;
                visibility: hidden;
                height: 65vh;
                transition: getMap($transitions, visibility), getMap($transitions, opacity);
                border: 1px solid getMap($colors, primaryColor);
                border-bottom-left-radius: 15px;
                border-bottom-right-radius: 15px;

                &.active {
                    opacity: 1;
                    visibility: visible;
                }

                &.sticky {
                    top: calc(100% - 7px);
                }
            }

            @include mq(desktop) {
                top: calc(100% - 25px);
                height: 55vh;
            }

            & > span {
                width: 100%;
                height: 7vh;
                display: flex;
                align-items: center;
                padding: 0 3%;
                font-weight: 800;
            }

            & > a {
                width: 100%;
                height: 7vh;
                display: flex;
                align-items: center;
                padding: 0 3%;
                text-decoration: none;
                transition: box-shadow 0.15s ease-in;

                &:hover {
                    box-shadow: inset 0 0 5px getMap($colors, lightenNeutralColor);
                }

                &:hover > span {
                    color: getMap($colors, primaryColor);
                }

                @include mq(tablet) {
                    padding: 2% 3%;
                }

                @include mq(desktop) {
                    padding: 1% 3%;
                }

                & > i {
                    color: getMap($colors, textColor);
                }

                & > span {
                    color: getMap($colors, textColor);
                    margin-left: 2%;
                    font-weight: 600;
                    font-size: $regularTextSize;
                    transition: getMap($transitions, color);
                }
            }

            &__back {
                position: absolute;
                bottom: 5%;
                left: 50%;
                transform: translateX(-50%);
                width: 65%;
                margin: 0 auto;
                height: 5vh;
                display: flex;
                align-items: center;
                justify-content: center;
                cursor: pointer;

                & > i {
                    margin-right: 5%;
                    color: getMap($colors, textColor);
                }

                & > span {
                    font-weight: 800;
                    font-size: 0.9em;
                }

                @include mq(tablet) {
                    display: none;
                }
            }
        }
    }

    &__right-area {
        grid-area: right;
        width: 100%;
        height: 100%;
        display: flex;

        & > i {
            width: 25%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.3em;
            color: getMap($colors, primaryColor);
            cursor: pointer;

            @include mq(tablet) {
                display: none;
            }
        }

        & > div {
            width: 25%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            text-decoration: none;

            @include mq(tablet) {
                width: 33.3%;
            }

            @include mq(desktop) {
                &::after {
                    content: "";
                    position: absolute;
                    top: 100%;
                    left: 0;
                    width: 100%;
                    height: 3px;
                    background-color: transparent;
                    z-index: 9;
                }
            }

            & > a {
                width: 100%;
                height: 100%;
                display: flex;
                align-items: center;
                justify-content: center;
                position: relative;
                text-decoration: none;

                @include mq(tablet) {
                    justify-content: flex-end;
                }

                &:hover > i {
                    color: getMap($colors, darkenPrimaryColor);
                }

                &:hover > span {
                    color: getMap($colors, primaryColor);
                }

                & > i {
                    font-size: 1.3em;
                    color: getMap($colors, primaryColor);
                    transition: getMap($transitions, color);

                    &.fa-caret-down {
                        display: none;

                        @include mq(desktop) {
                            display: block;
                            color: getMap($colors, textColor);
                            font-size: 0.85em;
                        }
                    }

                    &.fa-circle {
                        position: relative;
                        font-size: 2em;

                        & > span.user {
                            position: absolute;
                            left: 50%;
                            top: 50%;
                            transform: translate(-50%, -50%);
                            color: #fff;
                            font-size: 1rem;
                        }
                    }

                    &.fa-heart-o,
                    &.fa-shopping-cart {
                        position: relative;

                        & .items-count {
                            position: absolute;
                            top: -30%;
                            right: -40%;
                            width: 18px;
                            height: 18px;
                            background-color: getMap($colors, darkenPrimaryColor);
                            border-radius: 50%;

                            @include mq(desktop) {
                                width: 16px;
                                height: 16px;
                            }

                            & > span {
                                width: 100%;
                                height: 100%;
                                display: flex;
                                align-items: center;
                                justify-content: center;
                                color: #fff;
                                font-size: 0.75em;
                                transition: getMap($transitions, color);

                                @include mq(desktop) {
                                    font-size: 0.65em;
                                }
                            }
                        }
                    }
                }

                & > span {
                    display: none;

                    @include mq(desktop) {
                        display: flex;
                        margin: 0 5%;
                        font-weight: 800;
                        color: getMap($colors, textColor);
                    }
                }
            }

            & .user-panel {
                display: none;

                @include mq(desktop) {
                    position: absolute;
                    top: 100%;
                    left: -7vw;
                    width: auto;
                    height: auto;
                    display: flex;
                    flex-direction: column;
                    justify-content: flex-start;
                    background-color: #fff;
                    box-shadow: 0 0 5px getMap($colors, textColor);
                    border-radius: $regularRadius;
                    border-top-left-radius: 0;
                    border-top-right-radius: 0;
                    z-index: 9;
                    opacity: 0;
                    visibility: hidden;
                    transform: translateY(15px);
                    transition: getMap($transitions, visibility), getMap($transitions, opacity),
                        getMap($transitions, transform);

                    &.active {
                        opacity: 1;
                        visibility: visible;
                        transform: translateY(0);
                    }

                    &.sticky {
                        top: calc(100% + 3px);
                        border-top-left-radius: 0;
                        border-top-right-radius: 0;

                        &::before {
                            bottom: calc(95% + 3px);
                        }
                    }

                    &__not-logged-in {
                        width: 25vw;
                        height: 20vh;
                        display: flex;
                        flex-direction: column;

                        &__header {
                            width: 100%;
                            height: 50%;
                            display: flex;

                            & > i {
                                width: 15%;
                                height: 100%;
                                display: flex;
                                align-items: center;
                                justify-content: center;
                                font-size: 1.9em;
                                color: getMap($colors, darkenPrimaryColor);
                            }

                            & > span {
                                width: 85%;
                                height: 100%;
                                display: flex;
                                align-items: center;
                                font-size: $regularTextSize;
                            }
                        }

                        &__actions {
                            width: 100%;
                            height: 50%;
                            display: flex;
                            align-items: center;
                            justify-content: space-around;

                            & > a {
                                position: relative;
                                text-decoration: none;

                                &:first-child {
                                    width: 40%;
                                    height: $buttonHeight;
                                    display: flex;
                                    align-items: center;
                                    justify-content: flex-end;
                                    background-color: getMap($colors, darkenPrimaryColor);
                                    border-radius: $regularRadius;
                                    transition: getMap($transitions, bgColor);

                                    & > i {
                                        position: absolute;
                                        top: 50%;
                                        left: 0;
                                        transform: translateY(-50%);
                                        width: 25%;
                                        height: 100%;
                                        display: flex;
                                        align-items: center;
                                        justify-content: center;
                                        color: #fff;
                                        background-color: getMap($colors, primaryColor);
                                        border-top-left-radius: $regularRadius;
                                        border-bottom-left-radius: $regularRadius;
                                        border-bottom-right-radius: 75%;
                                        transition: getMap($transitions, bgColor);
                                    }

                                    & > span {
                                        width: 75%;
                                        display: flex;
                                        justify-content: center;
                                        color: #fff;
                                        font-size: $regularTextSize;
                                    }

                                    &:hover {
                                        background-color: getMap($colors, primaryColor);
                                    }

                                    &:hover > i {
                                        background-color: getMap($colors, darkenPrimaryColor);
                                    }
                                }

                                &:nth-child(2) {
                                    width: 50%;
                                    height: $buttonHeight;
                                    display: flex;
                                    align-items: center;
                                    justify-content: center;

                                    & > span {
                                        color: getMap($colors, textColor);
                                        font-size: $regularTextSize;
                                    }

                                    &::after {
                                        content: "";
                                        position: absolute;
                                        top: 100%;
                                        left: 50%;
                                        transform: translateX(-50%);
                                        width: 0;
                                        height: 1px;
                                        background: linear-gradient(
                                            90deg,
                                            getMap($colors, primaryColor),
                                            getMap($colors, secondaryColor)
                                        );
                                        transition: getMap($transitions, width);
                                    }

                                    &:hover::after {
                                        width: 100%;
                                    }
                                }
                            }
                        }
                    }
                }

                &__actions {
                    width: 15vw;
                    height: 30vh;
                    display: flex;
                    flex-direction: column;

                    & > span {
                        height: 7vh;
                        display: flex;
                        align-items: center;
                        padding: 0 3%;
                        border-bottom: 1px solid getMap($colors, neutralColor);
                        font-weight: 1000;
                        letter-spacing: 0.5px;
                    }

                    & > ul {
                        width: 100%;
                        height: 23vh;
                        display: flex;
                        flex-direction: column;
                        list-style: none;

                        & > li {
                            width: 100%;
                            height: 5vh;

                            &.last {
                                margin-top: auto;
                            }

                            & > a {
                                width: 100%;
                                height: 100%;
                                display: flex;
                                align-items: center;
                                padding: 0 3%;
                                text-decoration: none;
                                transition: box-shadow 0.15s ease-in;

                                & > span {
                                    color: getMap($colors, textColor);
                                }

                                &:hover {
                                    box-shadow: inset 0 0 5px getMap($colors, lightenNeutralColor);
                                }

                                &:hover > span {
                                    color: getMap($colors, primaryColor);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
